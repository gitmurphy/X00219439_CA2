trigger:
  - main
  - development

pool:
  vmImage: 'ubuntu-latest'

variables:
  javaVersion: '17'

stages:
  - stage: build
    displayName: "Build Application"
    jobs:
      - job: Build
        displayName: "Build Job"

        steps:
          - checkout: self
            fetchDepth: 0

          - script: chmod +x gradlew
            displayName: 'Make gradlew executable'

          # Ensure correct JDK is available
          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '$(javaVersion)'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
          
          - task: SonarCloudPrepare@3
            inputs:
              SonarQube: 'SonarConnection'
              organization: 'x00219439'
              scannerMode: 'other'
              extraProperties: |
                # Additional properties that will be passed to the scanner,
                # Put one key=value per line, example:
                # sonar.exclusions=**/*.bin
                sonar.projectKey=X00219439_X00219439_CA2
                sonar.projectName=X00219439_CA2

          - task: Gradle@3
            inputs:
              workingDirectory: ''
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '17'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              tasks: 'clean build test jacocoTestReport sonar'

          - task: PublishCodeCoverageResults@2
            inputs:
              summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/build/reports/jacoco/test/jacocoTestReport.xml'
              pathToSources: '$(System.DefaultWorkingDirectory)/app/src/main/java/'

          - task: SonarCloudPublish@3
            inputs:
              pollingTimeoutSec: '300'

          - task: CopyFiles@2
            displayName: 'Copy jar files'
            inputs:
              contents: '**/build/libs/*SNAPSHOT.jar'
              targetFolder: '$(build.artifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'

  - stage: deploy
    jobs:
      - deployment: deploy
        environment: 'Dev'
        strategy:
          runOnce:
            deploy:
              steps:

              - task: JavaToolInstaller@0
                inputs:
                  versionSpec: '$(javaVersion)'
                  jdkArchitectureOption: 'x64'
                  jdkSourceOption: 'PreInstalled'

              - task: DownloadBuildArtifacts@0
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'drop'
                  downloadPath: '$(System.ArtifactsDirectory)'
